import anvil.email
import anvil.tables as tables
import anvil.tables.query as q
from anvil.tables import app_tables

import anvil.server
import anvil.mpl_util

import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt


@anvil.server.callable
def plotdata2(R0,u,t_incubation,t_infective,e_initial, i_initial, r_initial):
    # parameter values
    
    s_initial = 1 - e_initial - i_initial - r_initial
    alpha = 1/t_incubation
    gamma = 1/t_infective
    beta = R0*gamma
    
    
    def deriv(x, t, alpha, beta, gamma):
        s, e, i, r = x
        dsdt = -(1-u)*beta * s * i
        dedt =  (1-u)*beta * s * i - alpha * e
        didt = alpha * e - gamma * i
        drdt =  gamma * i
        return [dsdt, dedt, didt, drdt]
    
    t = np.linspace(0, 160, 160)
    x_initial = s_initial, e_initial, i_initial, r_initial
    soln = odeint(deriv, x_initial, t, args=(alpha, beta, gamma))
    s, e, i, r = soln.T
    
    fig = plt.figure(figsize=(12,6))
    ax = [fig.add_subplot(221, axisbelow=True)]

    ax[0].plot(t, s, lw=3, label='Susceptible')
    ax[0].plot(t, i, lw=3, label='Infective')
    ax[0].plot(t, r, lw=3, label='Recovered')
    ax[0].set_title('Susceptible and Recovered Populations')
    ax[0].set_xlabel('Time /days')
    ax[0].set_ylabel('Fraction')

    for a in ax: 
        a.grid(True)
        a.legend()

    plt.tight_layout()
    return anvil.mpl_util.plot_image()


